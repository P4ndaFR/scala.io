package io.scala.views

<<<<<<< HEAD
||||||| parent of 5db0d4c (added organizers v1)
import com.raquo.laminar.api.L.*
=======
import io.scala.data.OrgaInfo.allOrga
import io.scala.modules.PersonCard
>>>>>>> 5db0d4c (added organizers v1)
import io.scala.modules.elements.Title

import com.raquo.laminar.api.L.*

object FAQView extends SimpleView {
  override def title: String = "Frequently Asked Questions"

  private def question(question: String, answer: String): HtmlElement = {
    div(
      className := "question",
      h2(question),
      p(answer)
    )
  }

  override def body(withDraft: Boolean): HtmlElement = {
    sectionTag(
      className := "container faq",
      Title("Frequently Asked Questions"),
      question(
        "Why 2023-10 was cancelled?",
        "It was difficult to get sponsorship to close the budget, that's why we had to work on a new format for this edition."
      ),
      question(
        "Is there a Code of Conduct?",
        """We had a Code of Conduct, the new one is lighter : 'please be nice', 'we are here to exchange idea and appreciate a shared moment', 'if there is something disturbing, we will take care of it'.
          |
          |We are not avoiding the idea of a CoC and it was discussed with others in the community. Writing something is not the same thing are making sure everyone is welcomed.
          |So we moved to a more convergent approach,
          | in continuity with the quality of our event.
          |""".stripMargin
      ),
<<<<<<< HEAD
      question(
        "Do you reimburse the tickets?",
        "We would prefer not to, however you can always send use an email and we will see what we can do. (We always reimbursed tickets if needed)"
      ),
      question(
        "Can I have a receipt?",
        "In the confirmation email, there is a link to download it. If you can't find it, send us an email and we will send you a new one."
      )
||||||| parent of 5db0d4c (added organizers v1)
      question("Do you reimburse the tickets?", "We would prefer not to, however you can always send use an email and we will see what we can do. (We always reimbursed tickets if needed)")


=======
      question(
        "Do you reimburse the tickets?",
        "We would prefer not to, however you can always send use an email and we will see what we can do. (We always reimbursed tickets if needed)"
      ),
      Title("Who is behind Scala.IO?"),
      div(
        className := "card-container organizers",
        allOrga.map(org => div(className :="rainbow", PersonView(org).body))
      )
>>>>>>> 5db0d4c (added organizers v1)
    )
  }
}
